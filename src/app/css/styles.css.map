{"version":3,"sources":["utils/_variables.scss","styles.css","styles.scss","utils/_mixins.scss"],"names":[],"mappings":"AAwBA,MACE,kBAAA,AACA,oBAAA,AACA,gBAAA,CCjBD,ACPD,KACE,eAAA,CDUD,ACPD,GACE,UAAA,AC0BE,uBAAA,CFfH,AEXG,yBDDJ,GAMI,UAAA,CDUD,CACF,ACPD,OACE,UAAA,AACA,cAAA,CDUD","file":"styles.css","sourcesContent":["$breakpoints: (\n  'xs': (\n    min-width: 480px,\n  ),\n  's': (\n    min-width: 667px,\n  ),\n  'm': (\n    min-width: 1024px,\n  ),\n  'l': (\n    min-width: 1280px,\n  ),\n  'xl': (\n    min-width: 1680px,\n  ),\n) !default;\n\n$spacings: (\n  'padding-bottom',\n  'padding-top',\n  'padding-left',\n  'padding-right'\n) !default;\n:root {\n  --primary: #2b2a28;\n  --secondary: #feed01;\n  --accent: #fff7e6;\n}\n",":root {\n  --primary: #2b2a28;\n  --secondary: #feed01;\n  --accent: #fff7e6;\n}\n\n:root {\n  --primary: #2b2a28;\n  --secondary: #feed01;\n  --accent: #fff7e6;\n}\n\nbody {\n  background: black;\n}\n\nh1 {\n  color: red;\n  margin: 36px 4px 4px 9px;\n}\n@media (min-width: 480px) {\n  h1 {\n    color: blue;\n  }\n}\n\n.hello {\n  color: red;\n  font-size: 13px;\n}","@import 'utils/variables';\n@import 'utils/mixins';\n\nbody {\n  background: black;\n}\n\nh1 {\n  color: red;\n\n  @include spacing(margin, 6, 2, 2, 3);\n\n  @include breakpoint('xs') {\n    color: blue;\n  }\n}\n\n.hello {\n  color: red;\n  font-size: 13px;\n}\n","@use 'sass:math';\n@use 'sass:string';\n@import 'variables';\n\n@mixin breakpoint($breakpoint) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Prints a media query based on the value\n    @media #{inspect(map-get($breakpoints, $breakpoint))} {\n      @content;\n    }\n  }\n\n  // If the key doesn't exist in the map\n  @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}\n\n@function getSize($number) {\n  @if $number {\n    @return (\n      string.unquote(\n        string.insert(string.quote(#{math.pow($number, 2)}), 'px', -1)\n      )\n    );\n  } @else {\n    @return null;\n  }\n}\n\n@mixin spacing($property, $top: 2, $right: null, $bottom: null, $left: null) {\n  @if ($top and $right and $bottom and $left) {\n    #{$property}: getSize($top) getSize($right) getSize($bottom) getSize($left);\n  } @else if ($top and $right and $bottom) {\n    #{$property}: getSize($top) getSize($right) getSize($bottom);\n  } @else if ($top and $right) {\n    #{$property}: getSize($top) getSize($right);\n  } @else {\n    #{$property}: getSize($top);\n  }\n}\n"]}